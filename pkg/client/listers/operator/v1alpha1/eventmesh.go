/*
Copyright 2025 The Knative Authors

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

	http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	operatorv1alpha1 "github.com/creydr/knative-emo-poc/pkg/apis/operator/v1alpha1"
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"
)

// EventMeshLister helps list EventMeshes.
// All objects returned here must be treated as read-only.
type EventMeshLister interface {
	// List lists all EventMeshes in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*operatorv1alpha1.EventMesh, err error)
	// EventMeshes returns an object that can list and get EventMeshes.
	EventMeshes(namespace string) EventMeshNamespaceLister
	EventMeshListerExpansion
}

// eventMeshLister implements the EventMeshLister interface.
type eventMeshLister struct {
	listers.ResourceIndexer[*operatorv1alpha1.EventMesh]
}

// NewEventMeshLister returns a new EventMeshLister.
func NewEventMeshLister(indexer cache.Indexer) EventMeshLister {
	return &eventMeshLister{listers.New[*operatorv1alpha1.EventMesh](indexer, operatorv1alpha1.Resource("eventmesh"))}
}

// EventMeshes returns an object that can list and get EventMeshes.
func (s *eventMeshLister) EventMeshes(namespace string) EventMeshNamespaceLister {
	return eventMeshNamespaceLister{listers.NewNamespaced[*operatorv1alpha1.EventMesh](s.ResourceIndexer, namespace)}
}

// EventMeshNamespaceLister helps list and get EventMeshes.
// All objects returned here must be treated as read-only.
type EventMeshNamespaceLister interface {
	// List lists all EventMeshes in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*operatorv1alpha1.EventMesh, err error)
	// Get retrieves the EventMesh from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*operatorv1alpha1.EventMesh, error)
	EventMeshNamespaceListerExpansion
}

// eventMeshNamespaceLister implements the EventMeshNamespaceLister
// interface.
type eventMeshNamespaceLister struct {
	listers.ResourceIndexer[*operatorv1alpha1.EventMesh]
}
